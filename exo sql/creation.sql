DROP DATABASE IF EXISTS exoBlog;
CREATE DATABASE exoBlog;

-- DROP TABLE IF EXISTS exoBlog.Users;
CREATE TABLE exoBlog.Users (
	id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	Pseudo VARCHAR(50) NOT NULL,
	Email VARCHAR(100) NOT NULL,
	Password CHAR(40) CHARACTER SET ASCII NOT NULL
	) ENGINE = InnoDB;

-- DROP TABLE IF EXISTS exoBlog.Category;
CREATE TABLE exoBlog.Category (
	id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	Name VARCHAR(50) NOT NULL,
	Description VARCHAR(255) NOT NULL
	) ENGINE = InnoDB;

-- DROP TABLE IF EXISTS exoBlog.Articles;
CREATE TABLE exoBlog.Articles (
	id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	Titre VARCHAR(255) NOT NULL,
	CategoryId INT NOT NULL,
	Content TEXT NOT NULL,
	Description TEXT NOT NULL,
	Photo VARCHAR(255),
	FOREIGN KEY (CategoryId) REFERENCES Category(id)
	) ENGINE = InnoDB;

-- DROP TABLE IF EXISTS exoBlog.Comments;
CREATE TABLE exoBlog.Comments (
	id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	Comment TEXT NOT NULL,
	CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UserId INT,
	ArticleId INT NOT NULL,
	CONSTRAINT FOREIGN KEY (UserId) REFERENCES Users(id) ON DELETE SET NULL,
	FOREIGN KEY (ArticleId) REFERENCES Articles(id)
	) ENGINE = InnoDB;

-- DROP TABLE IF EXISTS exoBlog.UsersToComments;
-- CREATE TABLE exoBlog.UsersToComments (
-- 	id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
-- 	UsersId INT NOT NULL,
-- 	CommentsId INT NOT NULL,
-- 	FOREIGN KEY (UsersId) REFERENCES Users(id),
-- 	FOREIGN KEY (CommentsId) REFERENCES Comments(id)
-- 	) ENGINE = InnoDB;

